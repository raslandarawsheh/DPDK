Usage:
  raw_ethernet_bw            start a server and wait for connection
  raw_ethernet_bw <host>     connect to server at <host>

Options:
  -a, --all  Run sizes from 2 till 2^23
  -b, --bidirectional  Measure bidirectional bandwidth (default unidirectional)
  -c, --connection=<RC/XRC/UC/UD/DC>  Connection type RC/XRC/UC/UD/DC (default RC)
  -d, --ib-dev=<dev>  Use IB device <dev> (default first device found)
  -D, --duration  Run test for a customized period of seconds.
  -e, --events  Sleep on CQ events (default poll)
  -f, --margin  measure results within margins. (default=2sec)
  -F, --CPU-freq  Do not fail even if cpufreq_ondemand module is loaded
  -g, --mcg  Send messages to multicast group with 1 QP attached to it.
  -h, --help  Show this help screen.
  -i, --ib-port=<port>  Use port <port> of IB device (default 1)
  -I, --inline_size=<size>  Max size of message to be sent in inline
  -l, --post_list=<list size> Post list of WQEs of <list size> size (instead of single post)
  -m, --mtu=<mtu>  Mtu size : 256 - 4096 (default port mtu)
  -M, --MGID=<multicast_gid>  In multicast, uses <multicast_gid> as the group MGID.
  -n, --iters=<iters>  Number of exchanges (at least 5, default 1000)
  -N, --noPeak Cancel peak-bw calculation (default with peak up to iters=20000)
  -O, --dualport  Run test in dual-port mode.
  -p, --port=<port>  Listen on/connect to port <port> (default 18515)
  -q, --qp=<num of qp's>  Num of qp's(default 1)
  -Q, --cq-mod  Generate Cqe only after <--cq-mod> completion
  -r, --rx-depth=<dep>  Rx queue size (default 512). If using srq, rx-depth controls max-wr size of the srq
  -R, --rdma_cm  Connect QPs with rdma_cm and run test on those QPs
  -s, --size=<size>  Size of message to exchange (default 65536)
  -S, --sl=<sl>  SL (default 0)
  -t, --tx-depth=<dep>  Size of tx queue (default 128)
  -T, --tos=<tos value>  Set <tos_value> to RDMA-CM QPs. availible only with -R flag. values 0-256 (default off)
  -u, --qp-timeout=<timeout>  QP timeout, timeout value is 4 usec * 2 ^(timeout), default 14
  -V, --version  Display version number
  -w, --limit_bw  Set verifier limit for bandwidth
  -x, --gid-index=<index>  Test uses GID with GID index (Default : IB - no gid . ETH - 0)
  -y, --limit_msgrate  Set verifier limit for Msg Rate
  -z, --com_rdma_cm  Communicate with rdma_cm module to exchange data - use regular QPs

      --cpu_util  Show CPU Utilization in report, valid only in Duration mode
      --dont_xchg_versions  Do not exchange versions and MTU with other side
      --inline_recv=<size>  Max size of message to be sent in inline receive
      --ipv6  Use IPv6 GID. Default is IPv4
      --output=<units> Set verbosity output level: bandwidth , message_rate, latency
      --pkey_index=<pkey index> PKey index to use for QP
      --report-both  Report RX & TX results separately on Bidirectinal BW tests
      --report_gbits  Report Max/Average BW of test in Gbit/sec (instead of MB/sec)
      --report-per-port  Report BW data on both ports when running Dualport and Duration mode
      --reversed  Reverse traffic direction - Server send to client
      --run_infinitely  Run test forever, print results every <duration> seconds
      --retry_count=<value>  Set retry count value in rdma_cm mode
      --use_exp  Use Experimental verbs in data path. Default is OFF.
      --odp  Use On Demand Paging instead of Memory Registration.

 Rate Limiter:
      --burst_size=<size> Set the amount of messages to send in a burst when using rate limiter
      --rate_limit=<rate> Set the maximum rate of sent packages. default unit is [pps]. use --rate_units to change that.
      --rate_units=<units> [Mgp] Set the units for rate limit to MBps (M), Gbps (g) or pps (p). default is pps (p)

  Raw Ethernet options :
  -B, --source_mac  source MAC address by this format XX:XX:XX:XX:XX:XX (default take the MAC address form GID)
  -E, --dest_mac  destination MAC address by this format XX:XX:XX:XX:XX:XX **MUST** be entered
  -J, --dest_ip  destination ip address by this format X.X.X.X (using to send packets with IP header)
  -j, --source_ip  source ip address by this format X.X.X.X (using to send packets with IP header)
  -K, --dest_port  destination port number (using to send packets with UDP header as default, or you can use --tcp flag to send TCP Header)
  -k, --source_port  source port number (using to send packets with UDP header as default, or you can use --tcp flag to send TCP Header)
  -Z, --server  choose server side for the current machine (--server/--client must be selected )
  -P, --client  choose client side for the current machine (--server/--client must be selected)
  -v, --mac_fwd  run mac forwarding test
      --promiscuous run promiscuous mode.
      --tcp  send TCP Packets. must include IP and Ports information.
